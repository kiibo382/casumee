openapi: 3.0.1
info:
  title: casumme application api
  description: casumee application api
  version: 1.0.0

tags:
  - name: users
    description: About users
  - name: auth
    description: About auth

paths:
  /users:
    get:
      tags:
        - users
      summary: get users list
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          description: Bad Request.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Not Authenticated.
    post:
      tags:
        - users
      summary: create a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        "400":
          description: Bad Request.

  /auth:
    post:
      tags:
        - auth
      summary: authorize the request user and return token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "201":
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        "400":
          description: Invalid e-mail or password.

  /users/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: user id
        required: true
        schema:
          type: string
    get:
      tags:
        - users
      summary: get the user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Not Authenticated.
    put:
      tags:
        - users
      summary: update the user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "204":
          description: UPDATED
        "400":
          description: Bad Request.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Not Authenticated.
    delete:
      tags:
        - users
      summary: delete the user
      security:
        - bearerAuth: []
      responses:
        "204":
          description: DELETED
        "400":
          description: Bad Request.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Not Authenticated.

components:
  schemas:
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        id:
          type: string
        user_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        group_email:
          type: string
          format: email
        password:
          type: string
        profile:
          type: string
        age:
          type: integer
        occupation:
          type: string
        career:
          type: array
          items:
            $ref: "#/components/schemas/Career"
        educational_background:
          type: array
          items:
            $ref: "#/components/schemas/EducationalBackground"
    Career:
      type: object
      properties:
        group_name:
          type: string
        first_date:
          type: string
          format: date
        last_date:
          type: string
          format: date
        occupation:
          type: string
        contents:
          type: string
    EducationalBackground:
      type: object
      properties:
        school_name:
          type: string
        first_date:
          type: string
          format: date
        last_date:
          type: string
          format: date
        faculty:
          type: string
        department:
          type: string
        major:
          type: string
        achivement:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
